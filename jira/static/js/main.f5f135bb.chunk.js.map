{"version":3,"sources":["utils/http.ts","hooks/useAuth.ts","context/auth-context.tsx","hooks/useMount.ts","hooks/useAsync.ts","hooks/useMountedRef.ts","components/error-boundary.tsx","App.tsx","context/index.tsx","index.tsx","auth-provider.ts","components/lib.tsx"],"names":["apiUrl","process","http","endpoint","a","token","method","data","restConfig","config","headers","Authorization","toUpperCase","qs","stringify","body","JSON","fetch","then","response","status","auth","window","location","reload","Promise","reject","message","json","ok","useHttp","user","useAuth","useCallback","context","useContext","AuthContext","Error","bootstrapUser","createContext","undefined","displayName","AuthProvider","callback","children","useAsync","error","isLoading","isIdle","isError","run","setUser","setData","queryClient","useQueryClient","useEffect","Provider","value","login","form","register","logout","clear","defaultInitialState","stat","defaultConfig","throwOnError","useSafeDispatch","dispatch","isMountedRef","mountedRef","useRef","current","useMountedRef","initState","initConfig","useMemo","useReducer","state","action","saftDispatch","useState","retry","setRetry","setError","promise","runConfig","catch","isSuccess","ErrorBoundary","this","props","fallbackRender","Component","AuthenticatedApp","React","lazy","UnauthenticatedApp","App","className","FullPageErrorFallback","Suspense","fallback","AppProviders","QueryClient","defaultOptions","queries","refetchOnWindowFocus","QueryClientProvider","client","loadServer","ReactDOM","render","document","getElementById","localStorageKey","getToken","localStorage","getItem","handleUserResponse","setItem","result","console","log","removeItem","Row","styled","div","between","marginBottom","gap","FullPage","FullPageLoading","size","Text","type","ErrorBox","ButtonNoPadding","Button","ScreenContainer"],"mappings":"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","file":"static/js/main.f5f135bb.chunk.js","sourcesContent":["import qs from \"qs\";\nimport * as auth from \"../auth-provider\";\nimport { useAuth } from \"hooks/useAuth\";\nimport { useCallback } from \"react\";\nconst apiUrl = process.env.REACT_APP_API_URL;\n// const apiUrl = \"\";\n\ninterface Config extends RequestInit {\n  token?: string;\n  data?: object | string;\n}\n\ntype Http = <T>(endpoint: string, config?: Config) => Promise<T>;\n\nexport const http: Http = async (\n  endpoint,\n  { token, method, data, ...restConfig } = {}\n) => {\n  const config = {\n    method: method || \"GET\",\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n      \"Content-Type\": data ? \"application/json\" : \"\",\n    },\n    ...restConfig,\n  };\n\n  if (config.method.toUpperCase() === \"GET\") {\n    if (typeof data === \"string\") {\n      endpoint += `?${data}`;\n    } else {\n      endpoint += `?${qs.stringify(data)}`;\n    }\n  } else {\n    config.body = JSON.stringify(data || {});\n  }\n\n  return fetch(`${apiUrl}/${endpoint}`, config).then(async (response) => {\n    if (response.status === 401) {\n      await auth.logout();\n      window.location.reload();\n      return Promise.reject({ message: \"请重新登录\" });\n    }\n\n    const data = await response.json();\n\n    if (response.ok) {\n      return data;\n    } else {\n      return Promise.reject(data);\n    }\n  });\n};\n\nexport type UseHttp = () => <T>(...args: Parameters<typeof http>) => Promise<T>;\n\nexport const useHttp: UseHttp = () => {\n  const { user } = useAuth();\n\n  return useCallback(\n    (...[endpoint, config]: [string, Config?]) =>\n      http(endpoint, { token: user?.token, ...config }),\n    [user]\n  );\n};\n","import { AuthContext } from \"context/auth-context\";\nimport { useContext } from \"react\";\n\nexport const useAuth = () => {\n  //context provider: user, login, register, logout;\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth 必须在AuthProvider中使用\");\n  }\n  return context;\n};\n","import React, { createContext } from \"react\";\nimport { AuthForm, User } from \"../typing\";\nimport * as auth from \"../auth-provider\";\nimport { http } from \"../utils/http\";\nimport { useMount } from \"../hooks/useMount\";\nimport useAsync from \"hooks/useAsync\";\nimport { FullPageErrorFallback, FullPageLoading } from \"components/lib\";\nimport { useQueryClient } from \"react-query\";\n\nexport interface AuthContextProps {\n  user: User | null;\n  register: (form: AuthForm) => Promise<void>;\n  login: (form: AuthForm) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst bootstrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http<{ user: User }>(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\nexport const AuthContext = createContext<AuthContextProps | undefined>(\n  undefined\n);\nAuthContext.displayName = \"AuthContext\";\n\nexport const AuthProvider: React.FC<{}> = ({ children }) => {\n  const {\n    data: user,\n    error,\n    isLoading,\n    isIdle,\n    isError,\n    run,\n    setData: setUser,\n  } = useAsync<User | null>();\n\n  const queryClient = useQueryClient();\n\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () =>\n    auth.logout().then(() => {\n      setUser(null);\n      queryClient.clear();\n    });\n\n  useMount(() => {\n    run(bootstrapUser());\n  });\n\n  if (isIdle || isLoading) return <FullPageLoading />;\n  if (isError) return <FullPageErrorFallback error={error} />;\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n","import { useEffect } from \"react\";\n\nexport const useMount = (callback: Function) => {\n  useEffect(() => {\n    callback();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n","import React, { useCallback, useMemo, useState, useReducer } from \"react\";\nimport { useMountedRef } from \"./useMountedRef\";\n\ninterface State<D> {\n  error: Error | null;\n  data: D | null;\n  stat: \"idle\" | \"loading\" | \"error\" | \"success\";\n}\n\nconst defaultInitialState: State<null> = {\n  stat: \"idle\",\n  data: null,\n  error: null,\n};\n\nconst defaultConfig = {\n  throwOnError: false,\n};\n\n// 确保设置state时，组件是在未卸载的状态下\nconst useSafeDispatch = <T>(dispatch: (...args: T[]) => void) => {\n  const isMountedRef = useMountedRef();\n  return useCallback(\n    (...args: T[]) => {\n      if (isMountedRef.current) {\n        dispatch && dispatch(...args);\n      }\n    },\n    [isMountedRef, dispatch]\n  );\n};\n\nconst useAsync = <D>(\n  initState?: State<D>,\n  initConfig?: typeof defaultConfig\n) => {\n  const config = useMemo(() => ({ ...defaultConfig, ...initConfig }), [\n    initConfig,\n  ]);\n\n  const [state, dispatch] = useReducer(\n    (state: State<D>, action: Partial<State<D>>) => ({ ...state, ...action }),\n    {\n      ...defaultInitialState,\n      ...initState,\n    }\n  );\n\n  const saftDispatch = useSafeDispatch(dispatch);\n\n  const [retry, setRetry] = useState(() => () => {});\n\n  const setData = useCallback(\n    (data: D) => {\n      saftDispatch({\n        data,\n        stat: \"success\",\n        error: null,\n      });\n    },\n    [saftDispatch]\n  );\n\n  const setError = useCallback(\n    (error: Error) => {\n      saftDispatch({\n        error,\n        stat: \"error\",\n        data: null,\n      });\n    },\n    [saftDispatch]\n  );\n\n  const run = useCallback(\n    (promise: Promise<D>, runConfig: { retry?: () => Promise<D> } = {}) => {\n      if (!(promise instanceof Promise)) {\n        throw new Error(\"请传入 Promise 类型数据\");\n      }\n      setRetry(() => () => {\n        if (runConfig.retry) {\n          run(runConfig.retry(), runConfig);\n        }\n      });\n      saftDispatch({ stat: \"loading\" });\n      return promise\n        .then((data) => {\n          setData(data);\n          return data;\n        })\n        .catch((error) => {\n          setError(error);\n          if (config.throwOnError) return Promise.reject(error);\n          return error;\n        });\n    },\n    [setData, setError, config, saftDispatch]\n  );\n\n  return {\n    isIdle: state.stat === \"idle\",\n    isLoading: state.stat === \"loading\",\n    isError: state.stat === \"error\",\n    isSuccess: state.stat === \"success\",\n    run,\n    setData,\n    setError,\n    retry,\n    ...state,\n  };\n};\n\nexport default useAsync;\n","/**\n * 返回组件的挂载状态，如果还没挂载或者已经卸载，返回false；反之，返回true\n */\n\nimport { useEffect, useRef } from \"react\";\n\nexport const useMountedRef = () => {\n  const mountedRef = useRef(false);\n\n  useEffect(() => {\n    mountedRef.current = true;\n    return () => {\n      mountedRef.current = false;\n    };\n  }, []);\n\n  return mountedRef;\n};\n","import React, { Component, PropsWithChildren } from \"react\";\n\ntype FallbackRender = (props: { error: Error | null }) => React.ReactElement;\n\ntype Props = PropsWithChildren<{\n  fallbackRender: FallbackRender;\n}>;\n\ntype State = {\n  error: Error | null;\n};\n\nexport default class ErrorBoundary extends Component<Props, State> {\n  state = { error: null };\n  static gatDerivedStateFromError(error: Error) {\n    return { error };\n  }\n  render() {\n    const { error } = this.state;\n    const { fallbackRender, children } = this.props;\n    if (error) {\n      return fallbackRender({ error });\n    }\n    return children;\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { useAuth } from \"hooks/useAuth\";\nimport ErrorBoundary from \"components/error-boundary\";\nimport { FullPageErrorFallback, FullPageLoading } from \"components/lib\";\n\nconst AuthenticatedApp = React.lazy(() => import(\"./authenticated-app\"));\nconst UnauthenticatedApp = React.lazy(() => import(\"./unauthenticated-app\"));\n\nfunction App() {\n  const { user } = useAuth();\n\n  return (\n    <div className=\"App\">\n      <ErrorBoundary fallbackRender={FullPageErrorFallback}>\n        <React.Suspense fallback={<FullPageLoading />}>\n          {user ? <AuthenticatedApp /> : <UnauthenticatedApp />}\n        </React.Suspense>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { ReactNode } from \"react\";\nimport { AuthProvider } from \"../context/auth-context\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nexport const AppProviders = ({ children }: { children: ReactNode }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        refetchOnWindowFocus: false,\n      },\n    },\n  });\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>{children}</AuthProvider>\n    </QueryClientProvider>\n  );\n};\n","// import \"./wdyr\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { DevTools, loadServer } from \"jira-dev-tool\";\nimport { AppProviders } from \"./context\";\nimport \"antd/dist/antd.less\";\n\nloadServer(() => {\n  ReactDOM.render(\n    <AppProviders>\n      <DevTools />\n      <App />\n    </AppProviders>,\n    document.getElementById(\"root\")\n  );\n});\n","import { AuthForm, User } from \"./typing\";\nimport { http } from \"utils/http\";\n\nconst localStorageKey = \"__auth_provider_token__\";\n\nexport const getToken = () => window.localStorage.getItem(localStorageKey);\n\ninterface Result {\n  user: User;\n}\n\nexport const handleUserResponse = ({ user }: Result) => {\n  window.localStorage.setItem(localStorageKey, user.token || \"\");\n  return user;\n};\n\nexport const login = async (data: AuthForm) => {\n  const result = await http<Result>(`login`, { method: \"post\", data });\n  console.log(\"getUserData\");\n\n  return handleUserResponse(result);\n};\n\nexport const register = async (data: AuthForm) => {\n  const result = await http<Result>(`register`, { method: \"post\", data });\n  return handleUserResponse(result);\n};\n\nexport const logout = async () => {\n  window.localStorage.removeItem(localStorageKey);\n};\n","import styled from \"@emotion/styled\";\nimport React from \"react\";\nimport { Button, Spin, Typography } from \"antd\";\n\ninterface RowProps {\n  gap?: number | boolean;\n  between?: boolean;\n  marginBottom?: number;\n}\n\nexport const Row = styled.div<RowProps>`\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => (props.between ? \"space-between\" : undefined)};\n  margin-bottom: ${(props) => props.marginBottom + \"rem\"};\n  > * {\n    margin-top: 0 !important;\n    margin-bottom: 0 !important;\n    margin-right: ${(props) =>\n      typeof props.gap === \"number\"\n        ? props.gap + \"rem\"\n        : props.gap\n        ? \"2rem\"\n        : undefined};\n  }\n`;\n\nconst FullPage = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FullPageLoading = () => (\n  <FullPage>\n    <Spin size={\"large\"}></Spin>\n  </FullPage>\n);\n\nexport const FullPageErrorFallback = ({ error }: { error: Error | null }) => (\n  <FullPage>\n    <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>\n  </FullPage>\n);\n\n// 类型守卫\nconst isError = (value: any): value is Error => value?.message;\n\nexport const ErrorBox = ({ error }: { error: Error | unknown }) => {\n  if (isError(error)) {\n    return <Typography.Text type=\"danger\">{error.message}</Typography.Text>;\n  } else {\n    return null;\n  }\n};\n\nexport const ButtonNoPadding = styled(Button)`\n  padding: 0;\n`;\n\nexport const ScreenContainer = styled.div`\n  padding: 3.2rem;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n"],"sourceRoot":""}